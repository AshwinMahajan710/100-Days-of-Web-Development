/* Flexbox :- one dimentional layout model offers space distrubution between items in interface and powerful alignment capabilities --> provides styling towards childrens*/
/* That means we can push blocks from left to right or top to bottom using flexbox */
/* Two axis of a flexbox :- while working with thw flexbox just keep in mind about two axies :- 
    i] main axis :- defined by flex-direction property
    ii] Cross axis :- runs perpendicular to main axis  */
*{
    margin: 0;
    padding: 0;
}

body{
    height: 100vh;
    background: blueviolet;
}
.container{
    border: 2px solid white;
    width : 800px;
    height: 400px;
    margin: 20px auto;
    /* flexbox here */
    display: flex;
    flex-direction: row; /*can have : column , row, row-reverse*/
    /* justify content property used to align items on main axis  */
    /* justify-content: center; ---> align values at the center*/
    /* justify-content: space-around; ---> spaces out items on the equal distance ---> same with space-between but avoid corners*/
    /* flex-wrap: nowrap; ---> property which helps to wrap the blocks*/
    /* flex-wrap: wrap; ----> aligned in the line and next line format */

    /* Align items property works on cross axis */
    /* That means opposite direction of chosen axis at justify content */
    align-items: center;
    justify-content: center;

    /* align-content property used to align content in the flexbox */
    /* default property is strech */
    /* only useful if height or width not described in the declaration */
    align-content: stretch;

    /*  we can also order our divs in the display using order property */

}

.child{
    width: 50px;
    height: 50px;
    background: teal;
    text-align: center;
    margin: 5px;
}


/*  Practice on flexbox froggy for better flex-box understanding */